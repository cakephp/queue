name: CI

on:
  push:
    branches:
      - 1.x
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  testsuite:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.2', '7.4', '8.0', '8.1', '8.2']
        prefer-lowest: ['']
        include:
          - php-version: '7.2'
            prefer-lowest: 'prefer-lowest'

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, intl
        coverage: pcov

    - name: Get composer cache directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Get date part for cache key
      id: key-date
      run: echo "::set-output name=date::$(date +'%Y-%m')"

    - name: Cache composer dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

    - name: Composer install
      run: |
        if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
          composer update --prefer-lowest --prefer-stable
        else
          composer update
        fi

    - name: Run PHPUnit
      run: |
        if ${{ matrix.php-version == '7.4'}}; then
          vendor/bin/phpunit --coverage-clover=coverage.xml
        else
          vendor/bin/phpunit
        fi

    - name: Code Coverage Report
      if: matrix.php-version == '7.4'
      uses: codecov/codecov-action@v3

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: mbstring, intl
        coverage: none
        tools: cs2pr

    - name: Composer Install
      run: composer stan-setup

    - name: Run PHP CodeSniffer
      run: vendor/bin/phpcs --report=checkstyle src/ tests/ | cs2pr

    - name: Run psalm
      if: success() || failure()
      run: vendor/bin/psalm.phar --output-format=github

    - name: Run phpstan
      if: success() || failure()
      run: vendor/bin/phpstan.phar analyse --error-format=github
