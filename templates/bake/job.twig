{#
/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org/)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org/)
 * @link          https://cakephp.org CakePHP(tm) Project
 * @since         0.1.0
 * @license       https://opensource.org/licenses/MIT MIT License
 */
#}
<?php
declare(strict_types=1);

namespace {{ namespace }}\Job;

use Cake\Queue\Job\JobInterface;
use Cake\Queue\Job\Message;
use Interop\Queue\Processor;

/**
 * {{ name }} job
 */
class {{ name }}Job implements JobInterface
{
{% if maxAttempts %}
    /**
     * The maximum number of times the job may be attempted.
     * 
     * @var int|null
     */
    public static $maxAttempts = {{ maxAttempts }};

{% endif %}
{% if isUnique %}
    /**
     * Whether there should be only one instance of a job on the queue at a time. (optional property)
     * 
     * @var bool
     */
    public static $shouldBeUnique = true;

{% endif %}
    /**
     * Executes logic for {{ name }}Job
     *
     * @param \Cake\Queue\Job\Message $message job message
     * @return string|null
     */
    public function execute(Message $message): ?string
    {
        return Processor::ACK;
    }
}
